services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - fe.env
    depends_on:
      - "api"
    develop:
      watch:
        - action: rebuild
          path: ./frontend
  api:
    build: ./api
    ports:
      - "8080:8080"
    env_file:
      - api.env
    depends_on:
      - "postgres"
      - "redis-cache"
    volumes:
      - evi_files:/app/filestorage 
    develop:
      watch:
        - action: rebuild
          path: ./api
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    env_file:
      - db.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
  redis-cache:
    image: redis
    ports:
      - "6379:6379"
    env_file:
      - red.env
    command: sh -c 'redis-server --requirepass "$$REDIS_PASSWORD"'
  prometheus:
    image: docker.io/prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
  grafana:
    image: docker.io/grafana/grafana-oss
    container_name: grafana
    ports:
      - "3001:3000"  # Changed Grafana's port to avoid conflict with frontend
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
volumes:
  pgdata:
  evi_files:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
